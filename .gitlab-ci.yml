stages:
  - test

.armv8_testsuite:
  stage: test
  image:
    name: python
    entrypoint: [""]
  cache:
    - key:
        files:
          - armv8_testsuite/requirements.txt
      paths:
        - armv8_testsuite/.venv/
    - key: cache-arm-gnu-toolchain
      paths:
        - armv8_testsuite/arm-gnu-toolchain-13.2.Rel1-x86_64-aarch64-none-elf/
  artifacts:
    when: always
    paths:
      - armv8_testsuite/test/actual_results/
  before_script:
    - apt-get update && apt-get install valgrind -y
    - cd ./armv8_testsuite
    - ./get_toolchain.sh
    - ./install
    - cd ..
  script:
    - cd src
    - make
    - cd ../armv8_testsuite
    - ./run -p$TEST_FLAGS --toolchain ./arm-gnu-toolchain-13.2.Rel1-x86_64-aarch64-none-elf/bin/
    - grep -q -e FAILED -e INCORRECT test/actual_results/results.json && exit 1
    - cd ..
    - find -path "$VALGRIND_TESTS" | xargs -I {} valgrind --leak-check=full --show-error-list=yes --error-exitcode=1 $BIN {} /dev/null

emulate_testsuite:
  extends: .armv8_testsuite
  variables:
    TEST_FLAGS: E
    BIN: ./src/emulate
    VALGRIND_TESTS: ./armv8_testsuite/test/expected_results/general/*.bin

assemble_testsuite:
  extends: .armv8_testsuite
  variables:
    TEST_FLAGS: A
    BIN: ./src/assemble
    VALGRIND_TESTS: ./armv8_testsuite/test/test_cases/general/*.s
